const inverseHorse = (ctx: any, shape: any) => {
	ctx.beginPath();
	ctx.fillStyle = '#ddd';
	ctx.moveTo(0.000000, 0.000000);
	ctx.lineTo(850.000000, 0.000000);
	ctx.lineTo(850.000000, 850.000000);
	ctx.lineTo(0.000000, 850.000000);
	ctx.lineTo(0.000000, 0.000000);
	ctx.moveTo(429.242000, 466.941000);
	ctx.bezierCurveTo(429.208000, 466.951000, 429.173000, 466.957000, 429.136000, 466.958000);
	ctx.bezierCurveTo(432.398000, 467.160000, 472.120000, 467.528000, 474.457000, 466.969000);
	ctx.bezierCurveTo(474.535000, 466.950000, 474.600000, 466.936000, 474.654000, 466.924000);
	ctx.bezierCurveTo(477.009000, 466.910000, 481.082000, 466.375000, 488.126000, 465.458000);
	ctx.bezierCurveTo(497.115000, 464.277000, 508.515000, 461.933000, 518.032000, 459.444000);
	ctx.bezierCurveTo(523.020000, 458.140000, 527.490000, 456.796000, 530.826000, 455.558000);
	ctx.bezierCurveTo(534.626000, 454.058000, 537.926000, 453.058000, 538.126000, 453.258000);
	ctx.bezierCurveTo(539.126000, 454.258000, 543.726000, 467.458000, 546.426000, 476.858000);
	ctx.bezierCurveTo(554.126000, 504.258000, 561.026000, 553.058000, 564.226000, 602.358000);
	ctx.bezierCurveTo(565.526000, 621.458000, 564.126000, 620.358000, 588.226000, 620.758000);
	ctx.bezierCurveTo(605.826000, 621.058000, 607.126000, 620.958000, 609.526000, 619.058000);
	ctx.lineTo(612.126000, 617.058000);
	ctx.lineTo(612.726000, 579.758000);
	ctx.bezierCurveTo(613.126000, 559.258000, 613.826000, 532.958000, 614.326000, 521.458000);
	ctx.bezierCurveTo(614.926000, 509.858000, 615.426000, 476.158000, 615.526000, 446.458000);
	ctx.bezierCurveTo(615.826000, 390.158000, 615.426000, 382.958000, 611.326000, 366.458000);
	ctx.bezierCurveTo(609.526000, 358.958000, 603.426000, 344.758000, 600.226000, 340.658000);
	ctx.bezierCurveTo(599.663000, 339.922000, 599.307000, 339.505000, 598.913000, 339.454000);
	ctx.bezierCurveTo(598.929000, 339.440000, 598.941000, 339.429000, 598.949000, 339.420000);
	ctx.lineTo(593.626000, 332.558000);
	ctx.lineTo(590.326000, 329.658000);
	ctx.bezierCurveTo(588.426000, 328.158000, 584.826000, 325.558000, 582.226000, 323.958000);
	ctx.lineTo(577.526000, 321.058000);
	ctx.lineTo(577.526000, 321.057000);
	ctx.lineTo(561.457000, 314.080000);
	ctx.bezierCurveTo(561.721000, 314.227000, 561.165000, 313.993000, 560.626000, 313.758000);
	ctx.bezierCurveTo(556.061000, 311.674000, 538.594000, 307.029000, 535.397000, 306.959000);
	ctx.bezierCurveTo(520.243000, 304.422000, 504.988000, 304.356000, 489.353000, 304.172000);
	ctx.bezierCurveTo(488.099000, 304.061000, 486.053000, 304.075000, 482.826000, 304.158000);
	ctx.bezierCurveTo(477.926000, 304.158000, 468.626000, 304.658000, 462.226000, 305.258000);
	ctx.bezierCurveTo(458.243000, 305.567000, 455.576000, 305.817000, 453.767000, 306.105000);
	ctx.lineTo(453.775000, 306.079000);
	ctx.lineTo(442.558000, 306.000000);
	ctx.bezierCurveTo(442.080000, 305.962000, 441.480000, 305.958000, 440.726000, 305.958000);
	ctx.bezierCurveTo(438.626000, 305.858000, 435.026000, 305.458000, 432.726000, 305.058000);
	ctx.bezierCurveTo(431.790000, 304.871000, 431.063000, 304.733000, 430.481000, 304.667000);
	ctx.lineTo(418.500000, 301.120000);
	ctx.bezierCurveTo(417.975000, 300.786000, 417.294000, 300.416000, 416.426000, 299.958000);
	ctx.bezierCurveTo(408.426000, 295.858000, 401.226000, 287.358000, 398.426000, 278.658000);
	ctx.bezierCurveTo(398.232000, 278.053000, 398.037000, 277.532000, 397.832000, 277.082000);
	ctx.lineTo(393.222000, 264.967000);
	ctx.lineTo(393.219000, 264.966000);
	ctx.bezierCurveTo(393.198000, 264.871000, 393.167000, 264.768000, 393.126000, 264.658000);
	ctx.bezierCurveTo(390.197000, 257.369000, 388.539000, 253.765000, 387.160000, 252.274000);
	ctx.lineTo(383.416000, 245.388000);
	ctx.bezierCurveTo(383.423000, 245.347000, 383.426000, 245.303000, 383.426000, 245.258000);
	ctx.bezierCurveTo(383.426000, 244.858000, 381.926000, 242.358000, 380.226000, 239.758000);
	ctx.bezierCurveTo(378.790000, 237.723000, 377.640000, 236.404000, 376.605000, 235.674000);
	ctx.lineTo(376.862000, 235.776000);
	ctx.bezierCurveTo(373.014000, 232.155000, 352.835000, 212.701000, 347.421000, 208.892000);
	ctx.bezierCurveTo(346.198000, 207.905000, 344.314000, 206.961000, 341.226000, 205.558000);
	ctx.bezierCurveTo(339.790000, 204.946000, 330.839000, 201.221000, 328.332000, 200.137000);
	ctx.bezierCurveTo(327.491000, 199.599000, 326.266000, 199.087000, 324.426000, 198.358000);
	ctx.bezierCurveTo(319.594000, 196.487000, 315.004000, 195.163000, 313.215000, 195.144000);
	ctx.lineTo(302.525000, 192.943000);
	ctx.bezierCurveTo(300.212000, 192.223000, 295.316000, 191.846000, 285.426000, 191.358000);
	ctx.lineTo(271.926000, 190.658000);
	ctx.lineTo(263.226000, 191.558000);
	ctx.lineTo(259.426000, 189.858000);
	ctx.bezierCurveTo(257.326000, 188.858000, 251.726000, 184.758000, 247.026000, 180.558000);
	ctx.bezierCurveTo(232.526000, 167.558000, 227.126000, 165.158000, 224.226000, 170.158000);
	ctx.bezierCurveTo(223.326000, 171.858000, 222.926000, 178.158000, 222.926000, 193.558000);
	ctx.lineTo(222.926000, 214.658000);
	ctx.lineTo(219.926000, 219.058000);
	ctx.bezierCurveTo(218.326000, 221.458000, 207.326000, 233.258000, 195.526000, 245.258000);
	ctx.lineTo(174.026000, 266.958000);
	ctx.lineTo(174.026000, 266.958000);
	ctx.bezierCurveTo(168.250000, 272.225000, 164.226000, 275.558000, 161.226000, 278.758000);
	ctx.bezierCurveTo(154.926000, 285.358000, 153.626000, 289.458000, 155.426000, 297.458000);
	ctx.bezierCurveTo(156.158000, 300.851000, 156.591000, 303.094000, 157.255000, 304.387000);
	ctx.bezierCurveTo(158.345000, 307.239000, 160.131000, 311.817000, 161.486000, 314.128000);
	ctx.bezierCurveTo(162.113000, 316.569000, 168.418000, 325.631000, 170.826000, 327.058000);
	ctx.bezierCurveTo(174.026000, 328.958000, 182.026000, 329.558000, 188.126000, 328.358000);
	ctx.lineTo(191.126000, 327.758000);
	ctx.bezierCurveTo(194.415000, 327.045000, 197.537000, 326.709000, 199.938000, 326.533000);
	ctx.bezierCurveTo(205.264000, 327.290000, 246.587000, 318.938000, 248.831000, 316.636000);
	ctx.bezierCurveTo(252.442000, 316.339000, 252.516000, 316.168000, 258.124000, 317.457000);
	ctx.lineTo(258.126000, 317.458000);
	ctx.bezierCurveTo(269.926000, 325.058000, 274.226000, 339.058000, 275.726000, 374.458000);
	ctx.lineTo(275.926000, 380.458000);
	ctx.lineTo(275.928000, 380.458000);
	ctx.lineTo(276.703000, 388.275000);
	ctx.lineTo(277.427000, 405.884000);
	ctx.lineTo(278.056000, 418.882000);
	ctx.lineTo(277.926000, 431.458000);
	ctx.bezierCurveTo(279.826000, 461.558000, 280.226000, 506.858000, 279.326000, 555.558000);
	ctx.bezierCurveTo(278.126000, 614.458000, 277.926000, 612.558000, 284.426000, 616.358000);
	ctx.bezierCurveTo(287.526000, 618.258000, 289.626000, 618.458000, 303.426000, 618.458000);
	ctx.bezierCurveTo(325.526000, 618.458000, 326.526000, 617.658000, 327.826000, 600.458000);
	ctx.bezierCurveTo(330.026000, 572.758000, 337.826000, 518.658000, 343.026000, 495.258000);
	ctx.bezierCurveTo(346.026000, 481.958000, 351.826000, 462.058000, 353.926000, 457.958000);
	ctx.lineTo(355.326000, 455.158000);
	ctx.lineTo(361.126000, 456.558000);
	ctx.bezierCurveTo(377.126000, 460.358000, 420.126000, 466.958000, 429.126000, 466.958000);
	ctx.lineTo(429.136000, 466.958000);
	ctx.lineTo(429.134000, 466.957000);
	ctx.bezierCurveTo(429.171000, 466.957000, 429.207000, 466.951000, 429.242000, 466.941000);
	ctx.lineTo(429.282000, 466.928000);
	ctx.lineTo(429.284000, 466.927000);
	ctx.lineTo(429.332000, 466.905000);
	ctx.bezierCurveTo(429.316000, 466.914000, 429.299000, 466.921000, 429.282000, 466.928000);
	ctx.lineTo(429.260000, 466.936000);
	ctx.lineTo(429.242000, 466.941000);
	ctx.moveTo(474.095000, 466.917000);
	ctx.bezierCurveTo(472.698000, 466.868000, 472.697000, 466.867000, 474.092000, 466.917000);
	ctx.lineTo(474.529000, 466.925000);
	ctx.bezierCurveTo(474.408000, 466.930000, 474.260000, 466.930000, 474.095000, 466.917000);
	ctx.moveTo(474.654000, 466.924000);
	ctx.bezierCurveTo(474.611000, 466.925000, 474.570000, 466.925000, 474.529000, 466.925000);
	ctx.lineTo(474.656000, 466.924000);
	ctx.lineTo(474.654000, 466.924000);
	ctx.moveTo(258.124000, 317.457000);
	ctx.bezierCurveTo(258.110000, 317.447000, 258.110000, 317.447000, 258.113000, 317.449000);
	ctx.bezierCurveTo(258.117000, 317.452000, 258.124000, 317.457000, 258.124000, 317.457000);
	ctx.lineTo(258.124000, 317.457000);
	ctx.moveTo(248.924000, 316.480000);
	ctx.lineTo(248.926000, 316.458000);
	ctx.lineTo(248.925000, 316.477000);
	ctx.lineTo(248.924000, 316.480000);
	ctx.lineTo(248.924000, 316.483000);
	ctx.lineTo(248.921000, 316.493000);
	ctx.lineTo(248.918000, 316.507000);
	ctx.lineTo(248.916000, 316.511000);
	ctx.lineTo(248.915000, 316.516000);
	ctx.lineTo(248.902000, 316.544000);
	ctx.bezierCurveTo(248.886000, 316.573000, 248.862000, 316.604000, 248.831000, 316.636000);
	ctx.lineTo(248.831000, 316.636000);
	ctx.bezierCurveTo(248.862000, 316.604000, 248.886000, 316.573000, 248.902000, 316.544000);
	ctx.lineTo(248.916000, 316.511000);
	ctx.lineTo(248.921000, 316.493000);
	ctx.lineTo(248.924000, 316.480000);
	ctx.moveTo(442.558000, 306.000000);
	ctx.lineTo(442.556000, 306.000000);
	ctx.bezierCurveTo(443.501000, 306.075000, 443.502000, 306.076000, 442.558000, 306.000000);
	ctx.moveTo(157.255000, 304.387000);
	ctx.bezierCurveTo(157.427000, 304.721000, 157.513000, 304.888000, 157.512000, 304.888000);
	ctx.bezierCurveTo(157.512000, 304.887000, 157.426000, 304.720000, 157.255000, 304.385000);
	ctx.lineTo(157.255000, 304.387000);
	ctx.moveTo(489.353000, 304.172000);
	ctx.bezierCurveTo(489.853000, 304.216000, 490.102000, 304.238000, 490.102000, 304.238000);
	ctx.bezierCurveTo(490.101000, 304.238000, 489.851000, 304.216000, 489.350000, 304.172000);
	ctx.lineTo(489.353000, 304.172000);
	ctx.moveTo(418.500000, 301.120000);
	ctx.bezierCurveTo(418.985000, 301.428000, 419.227000, 301.582000, 419.227000, 301.582000);
	ctx.bezierCurveTo(419.226000, 301.582000, 418.984000, 301.428000, 418.498000, 301.120000);
	ctx.lineTo(418.500000, 301.120000);
	ctx.moveTo(397.833000, 277.085000);
	ctx.bezierCurveTo(397.681000, 276.753000, 397.605000, 276.586000, 397.605000, 276.586000);
	ctx.bezierCurveTo(397.605000, 276.585000, 397.680000, 276.751000, 397.832000, 277.082000);
	ctx.lineTo(397.833000, 277.085000);
	ctx.moveTo(328.332000, 200.137000);
	ctx.lineTo(328.331000, 200.136000);
	ctx.bezierCurveTo(329.245000, 200.721000, 329.246000, 200.721000, 328.332000, 200.137000);
	ctx.moveTo(302.524000, 192.942000);
	ctx.bezierCurveTo(302.829000, 193.037000, 302.982000, 193.085000, 302.983000, 193.085000);
	ctx.bezierCurveTo(302.983000, 193.085000, 302.830000, 193.038000, 302.525000, 192.943000);
	ctx.lineTo(302.524000, 192.942000);
	ctx.fill();
}


export default inverseHorse;